name: dotnet

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x
      - name: Version (release)
        run: |
          OLD=$(yq ".Project.PropertyGroup[0].Version" -p xml -o xml src/Pingmint.Datadog/Pingmint.Datadog.csproj)
          NEW="$OLD.${COUNTER}" yq ".Project.PropertyGroup[0].Version = env(NEW)" -p xml -o xml -i src/Pingmint.Datadog/Pingmint.Datadog.csproj
          cat src/Pingmint.Datadog/Pingmint.Datadog.csproj
        env:
          COUNTER: ${{ github.run_number }}
        if: github.ref == 'refs/heads/main'
      - name: Version (pre-release)
        run: |
          OLD=$(yq ".Project.PropertyGroup[0].Version" -p xml -o xml src/Pingmint.Datadog/Pingmint.Datadog.csproj)
          NEW="$OLD.${COUNTER}-alpha" yq ".Project.PropertyGroup[0].Version = env(NEW)" -p xml -o xml -i src/Pingmint.Datadog/Pingmint.Datadog.csproj
          cat src/Pingmint.Datadog/Pingmint.Datadog.csproj
        env:
          COUNTER: ${{ github.run_number }}
        if: github.ref != 'refs/heads/main'
      - name: Restore dependencies
        run: dotnet restore src/Pingmint.Datadog --locked-mode --configfile ./NuGet.config
      - name: Build
        run: dotnet build --configuration Release --no-restore src/Pingmint.Datadog
      - name: Pack
        run: dotnet pack --configuration Release --no-build --no-restore --verbosity normal --output ./nupkg src/Pingmint.Datadog
      - name: Push
        run: dotnet nuget push ./nupkg/*.nupkg --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key $NUGET_API_KEY
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        if: github.ref == 'refs/heads/main'
